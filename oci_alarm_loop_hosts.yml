- name: Alarm Suppress based on Host or group provided
  hosts: localhost
  gather_facts: true

  collections:
    - oracle.oci

  vars:
    target: "{{ group1 }}"
    list_eligible_only: "{{ list_eligible_only }}"
    remove_suppression: "{{ remove_suppression }}"
    add_suppression: "{{ add_suppression }}"
    outage_description: "{{ outage_description }}"
    start_time_main: "{{ start_time }}"
    end_time_main: "{{ end_time }}"

  tasks:
    - name: host inventory group loop
      ansible.builtin.debug:
        msg: hostname "{{ hostvars[item].display_name }}"
      with_items:
        - "{{ groups[target] }}"
      when: "target in groups"

    - name: Create a List variable and print it
      set_fact:
        alarm_ids: []

    - name: host inventory group loop for host {{ item }}
      include_tasks: oci_alarm_suppress.yml
      vars:
        instance_name: "{{ hostvars[item].display_name }}"
        instance_id: "{{ hostvars[item].id }}"
        instance_compartment: "{{ hostvars[item].compartment_id }}"
      with_items:
        - "{{ groups[target] }}"
      when: "target in groups"

    - name: host inventory loop
      block:
        - name: host var loop block
          include_tasks: oci_alarm_suppress.yml
          vars:
            instance_name: "{{ hostvars[target].display_name }}"
            instance_id: "{{ hostvars[target].id }}"
            instance_compartment: "{{ hostvars[target].compartment_id }}"
      when: "target in hostvars"

    - name: Print the list of eligible alarm ids
      debug: var=alarm_ids
      when: list_eligible_only

    - name: Now suppress alarms based on the input arguments
      block:
        - name: Suppress Alarms with date and time
          oci_monitoring_alarm:
            alarm_id: "{{ alarm_item }}"
            suppression:
              time_suppress_from: "{{ start_time }}"
              time_suppress_until: "{{ end_time }}"
              description: "{{ outage_description }}"
          with_items: "{{ alarm_ids }}"
          loop_control:
            loop_var: alarm_item
          when: add_suppression
      when: add_suppression
      rescue:
        - fail:
            msg: "{{ ansible_failed_task }} {{ ansible_failed_result }}"

    - name: Now remove the suppression based on the input arguments
      block:
        - name: Remove Suppression from eligible Alarms
          oci_monitoring_alarm_actions:
            alarm_id: "{{ alarm_item }}"
            action: remove_alarm_suppression
          with_items: "{{ alarm_ids }}"
          loop_control:
            loop_var: alarm_item
          when: remove_suppression
      when: remove_suppression
      rescue:
        - fail:
            msg: "{{ ansible_failed_task }} {{ ansible_failed_result }}"




    - name: Set compartment_id dynamically
      set_fact:
        compartment_id: "{{ hostvars[target].compartment_id | default(hostvars[groups[target][0]].compartment_id, true) }}"
      when: target in hostvars or target in groups

    - name: Get all alarms in the compartment
      oracle.oci.oci_monitoring_alarm:
        compartment_id: "{{ compartment_id }}"  
      register: all_alarms
      when: compartment_id is defined


    - name: Debug full alarm response
      debug:
        var: all_alarms

    - name: Debug Full Alarm Details
      debug:
        var: all_alarms.alarm
 

    - name: Print the alarm ID
      debug:
        msg: "{{ all_alarms.alarm.id }}"



    # - name: Suppress alarm for a specific resource
    #   oracle.oci.oci_monitoring_alarm_suppression:
    #     alarm_id: "{{ alarm_item }}"
    #     alarm_suppression_target:
    #       target_type: "ALARM"
    #     display_name: "Suppression for {{ alarm_item }}"
    #     time_suppress_from: "{{ start_time_main }}"
    #     time_suppress_until: "{{ end_time_main }}"
    #   with_items: 
    #     - "{{ all_alarms.alarm.id }}"  
    #   loop_control:
    #     loop_var: alarm_item

    # - name: Suppress alarm for a specific resource
    #   oracle.oci.oci_monitoring_alarm_suppression:
    #     alarm_id: "ocid1.alarm.oc1.iad.aaaaaaaa3mcvlki47umb7kc4pjjuy5iogp4cqjjxhnog3t75ak3joy4dovwa"
    #     alarm_suppression_target:
    #       target_type: "ALARM"
    #       alarm_id: "ocid1.alarm.oc1.iad.aaaaaaaa3mcvlki47umb7kc4pjjuy5iogp4cqjjxhnog3t75ak3joy4dovwa"
    #     display_name: "Example Suppression"
    #     dimensions:
    #       resourceId: "ocid1.instance.oc1.iad.anuwcljt6rfcedyctsspgu4ahmsd2sfrn3vdmvttrx635sfjlyjst4fsez3q"
    #     time_suppress_from: "{{ start_time_main }}"
    #     time_suppress_until: "{{ end_time_main }}"


    - name: Debug target value
      debug:
        var: target

    - name: Debug available hostvars keys
      debug:
        var: hostvars.keys()


    - name: Select a valid host from the group
      set_fact:
        selected_host: "{{ groups[target][0] | default('') }}"  # Picks the first host from the group
      when: target in groups

    - name: Suppress alarm for a specific resource
      oracle.oci.oci_monitoring_alarm_suppression:
        alarm_id: "{{ alarm_item }}"
        alarm_suppression_target:
          target_type: "ALARM"
          alarm_id: "{{ alarm_item }}"
        display_name: "Suppression for {{ hostvars[selected_host].display_name }}"
        dimensions: 
          resourceDisplayName: "{{ hostvars[selected_host].display_name }}"
          # resourceDisplayName : "OEL7TESTVM"
          
        time_suppress_from: "{{ start_time_main }}"
        time_suppress_until: "{{ end_time_main }}"
      with_items: 
        - "{{ all_alarms.alarm.id }}"  
      loop_control:
        loop_var: alarm_item
      when: selected_host in hostvars


    # - name: Suppress alarm for a specific resource
    #   oracle.oci.oci_monitoring_alarm_suppression:
    #     alarm_id: "{{ alarm_item }}"
    #     alarm_suppression_target:
    #       target_type: "ALARM"
    #       alarm_id: "{{ alarm_item }}"
    #     display_name: "Suppression for {{ hostvars[selected_host].display_name }}"
    #     # dimensions:
    #     #   resourceId: "{{ hostvars[selected_host].id }}"
    #     time_suppress_from: "{{ start_time_main }}"
    #     time_suppress_until: "{{ end_time_main }}"
    #   with_items: 
    #     - "{{ all_alarms.alarm.id }}"  
    #   loop_control:
    #     loop_var: alarm_item
    #   vars:
    #     selected_host: "{{ groups[target][0] | default('') }}"  # Pick first host from the group
    #   when: target in groups and selected_host in hostvars


        
 

      # with_items: "{{ alarm_ids }}"
      # loop_control:
      #   loop_var: alarm_item
    #   when: add_suppression
    # - name: Check version of community.general
    #   ansible.builtin.debug:
    #     msg: "oracle.oci version {{ lookup('community.general.collection_version', 'oracle.oci') }}"